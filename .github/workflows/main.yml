name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8
          pip install -r ./backend/requirements.txt

      - name: Test with flake8 and django tests
        run: |
          cd ./backend
          python -m flake8

  build_backend_and_push_to_docker_hub:
    name: Build backend and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Build frontend and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build_backend_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    name: Deploy image on production server
    runs-on: ubuntu-latest
    needs:
      - tests
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:

          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE_SERVER }}
          source: "docker-compose.yml"
          target: "foodgram-project-react"

          script: |
            sudo docker pull xaliy/frontend:latest
            sudo docker pull xaliy/backend:latest
            
            rm -f .env
            touch .env
            echo 'ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}' >> .env
            echo 'DEBUG=${{ secrets.DEBUG }}' >> .env
            echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' >> .env
            echo 'DB_ENGINE=${{ secrets.DB_ENGINE }}' >> .env
            echo 'DB_NAME=${{ secrets.DB_NAME }}' >> .env
            echo 'POSTGRES_USER=${{ secrets.POSTGRES_USER }}' >> .env
            echo 'POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}' >> .env
            echo 'DB_HOST=${{ secrets.DB_HOST }}' >> .env
            echo 'DB_PORT=${{ secrets.DB_PORT }}' >> .env

            sudo docker-compose up -d
            sudo docker-compose exec backend python manage.py migrate
            sudo docker-compose exec backend python manage.py collectstatic --no-input

